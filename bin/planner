#!/usr/bin/env ruby

unless ARGV.first and File.exist? ARGV.first
  abort "USAGE:  #{$PROGRAM_NAME} path/to/file/with/tasks"
end

$LOAD_PATH << File.join(File.dirname(__FILE__), *%w[.. lib])

require "route_planner"


graph = nil # The graph to be used in tasks

def answer(task, result)
  puts "#{task}: #{result}"
end

File.foreach(ARGV.first) do |line|
  if line =~ /\AGRAPH: (.+)/
    graph = RoutePlanner::Graph.parse($1)
  else
    # %1 - task, $2 - name, $3-$7 - params
    params = line.scan(/\A(\w+) (\w+): (\w+)\s?(\w*)\s?(\w*)\s?(\w*)\s?(\w*)/).
      flatten.reject { |s| s.empty? }
    if params.length > 2
      task_type = params[0]
      task_name = params[1]
      2.times { params.delete_at(0) }
      task = RoutePlanner::Tasks::Task.create(task_type, [graph] + params)
      answer(task_name, task.format_result) if task
    end
  end
end
